/*** @export "colorkit" css */
/**
 * Color Pallet
 * 
 */

/**
 * Color Scheme
 * 
 * Generate harmonious color scheme based on a single key-color ($base-color)
 *
 * $base-color: any CSS color value or keyword
 * $color-relationship: monochromatic/complementary/spit-complementary/analogous/triadic/tetradic/quadradic
 * $color-angle: (defaults to 30)
 */
$color-relationship: double-complementary;
$base-color: red;
@include color-scheme($color-relationship, $base-color);

/**
 * Color Pallet
 */
$colorPallet:(
  white: white(0),
  black: black(0),
  highlight: alpha-white(.5),
  shadow: alpha-black(.2),
  strong: black(20%),
  subtle: black(60%),
  muted:  black(70%),
  accent: $blue-green--tint-2,
);

/**
 * Text Colors
 */
$textColorPallet:(
  strong: map-get($colorPallet, strong),
  subtle: map-get($colorPallet, subtle),
  muted: map-get($colorPallet, muted),
  accent: map-get($colorPallet, accent),
);

/**
 * Background Colors
 */
$bgColorPallet:(
  strong: map-get($colorPallet, strong),
  subtle: map-get($colorPallet, subtle),
  muted: map-get($colorPallet, muted),
  accent: map-get($colorPallet, accent),
);

/**
 * Brand Colors
 *
 * prefixed with '$brand-' to avoid proper color names for ease of use and to avoid collision with CSS color keywords
 * ex: $brand-blue: deepskyblue; or: $brand-accent: tint($brand-blue, 12%);
 */

/**
 * ex:
 * $brand-blue:;
 * $brand-primary:;
 * $brand-secondary:;
 * $brand-accent:;
 */

/**
 * UI and State Colors
 *
 */

$uiColorPallet:(
  base:(
    primary: $blue-green--tone-2,
    secondary: $blue-green--tone-4,
    info: $blue-green--shade-2,
    success: $green--tint-2,
    warning: $red-orange--tint-2,
    error: $red--tint-2,
  ); 
  primary:(
    //text:
    //background:
    //border:
    hoverState:(
      //text:
      //background:
      //border:
    );
  );
  secondary:(
    //text:
    //background:
    //border:
    hoverState:(
      //text:
      //background:
      //border:
    );
  );
  info:(
    text: tint(map-get(map-get($uiColorPallet, base), info), 25%),
    background: map-get(map-get($uiColorPallet, base), info),
    border: darken(adjust-hue(map-get(map-get($uiColorPallet, base), info), -10), 7%),
    hoverState:(
      //text:
      //background:
      //border:
    );
  );
  warning:(
    text: tint($warning-color, 25%),
    background: map-get($uiColorPallet, base), warning);
    border: darken(adjust-hue(map-get(map-get($uiColorPallet, base), warning), -10), 3%),
    hoverState:(
      //text:
      //background:
      //border:
    );
  );
  error:(
    text: tint(map-get(map-get($uiColorPallet, base), error), 25%),
    background: map-get(map-get($uiColorPallet, base), error),
    border: darken(adjust-hue(map-get($uiColorPallet, base), error), 3%),
    hoverState:(
      //text:
      //background:
      //border:
    );
  );
  success:(
    text: tint(map-get(map-get($uiColorPallet, base), success), 25%),
    background: map-get(map-get($uiColorPallet, base), success),
    border: darken(adjust-hue(map-get(map-get($uiColorPallet, base), success), -10), 5%),
    hoverState:(
      //text:
      //background:
      //border:
    );
  );
);

